-- subQuery
-- Main Query를 보조하는 역할을 하는 쿼리

select sal from emp where ename = 'JONES';
select ename, sal from emp where sal > 2975;

select ename, sal from emp
where sal > (select sal from emp where ename = 'JONES');

-- scott 보다 먼저 입사한 사원들의 목록을 출력하세요
select HIREDATE from emp where ename = 'SCOTT';

select * from emp 
where HIREDATE > (select HIREDATE from emp where ename = 'SCOTT');

-- 20번 부서의 사원들 중 전체사원 평균연봉보다 높은 사원들의
-- 사원번호, 사원명, 직책, 급여, 부서번호, 부서명, 근무지를 출력하세요
select EMPNO, ENAME, JOB, SAL, e.DEPTNO, dname, loc
from emp e join dept d 
on e.DEPTNO = d.DEPTNO 
where e.DEPTNO = 20
and e.SAL > (select avg(SAL) from emp);

-- 다중 행 서브쿼리 (Multi-Row SubQuery)
select max(sal) from emp group by deptno;

-- 부서별 최고급여를 받는 사원들의 정보를 출력하세요
select empno, ename, sal
from emp
where sal in (select max(SAL) from emp group by deptno);

-- any : 어느것 하나라도 만족시키는 결과
select empno, ename, sal
from emp
where sal > any (select max(SAL) from emp group by deptno);

-- all : 모두를 만족시키는 결과
select empno, ename, sal
from emp 
where sal > all (select max(SAL) from emp group by deptno);

-- 부서번호가 30번 부서인 직원들의 급여보다 작은 사원들의 정보를 출력하세요. 단, any를 사용할 것
select * from emp 
where sal < all (select sal from emp where deptno = 30);

select * from emp 
where sal > all (select sal from emp where deptno = 30);

-- inline view : from 절에서 사용되는 서브쿼리
-- 단, 중첩 서브쿼리가 많아질 수록 성능저하의 폭이 크다
select * from (select empno, ename, job, sal from emp) e
where e.sal > 1000;

-- Scala SubQuery (스칼라 서브쿼리) : select 절의 한 개의 컬럼을 구성하는 서브쿼리
select empno, ename, job, sal,
(select grade from salgrade where e.sal between LOSAL and HISAL) as salgrade,
deptno,
(select dname from dept d where e.deptno = d.deptno) as dname
from emp e;

-- with 절로 만드는 가상테이블 변수 혹은 별칭 기법
-- 서브쿼리문이 복잡하여 메인쿼리의 가독성이 현저하게 떨어질 때
with e as (select empno, ename, job, sal from emp)
select * from e where sal > 1000;

-- 10_subQuery_Q1
-- by 이병인
select JOB, EMPNO, ENAME, SAL, DEPTNO,
(select DNAME from dept where emp.DEPTNO = dept.DEPTNO) as DNAME
from emp
where JOB = (select JOB from emp where ENAME = 'ALLEN')
order by 4 desc;

select JOB, EMPNO, ENAME, SAL, e.DEPTNO, dname
from emp e join dept d
on e.DEPTNO = d.DEPTNO
where JOB = (select JOB from emp where ENAME = 'ALLEN')
order by 4 desc;

-- 10_subQuery_Q2
-- by 이운산
select EMPNO, ENAME, d.DNAME, HIREDATE, d.LOC, e.SAL, s.GRADE
from emp e join dept d join salgrade s
on e.DEPTNO = d.DEPTNO
where e.sal > any (select avg(sal) from emp)
and e.sal between s.LOSAL and s.HISAL
order by 6 desc, 1;

select EMPNO, ENAME, d.DNAME, HIREDATE, d.LOC, e.SAL, s.GRADE
from emp e join dept d 
on e.DEPTNO = d.DEPTNO
join salgrade s
on e.sal between s.LOSAL and s.HISAL
where e.sal > any (select avg(sal) from emp)
order by 6 desc, 1;

-- 10_subQuery_Q3
-- by 이혜경
select EMPNO, ENAME, JOB, e.DEPTNO, DNAME, LOC  
from emp e join dept d
on e.DEPTNO = d.DEPTNO
where e.DEPTNO = 10
and JOB not in (select job from emp where deptno = 30);

-- 10_subQuery_Q4
-- 다중행 함수 사용 X
-- by 안은솔
SELECT EMPNO, ENAME, SAL, GRADE
FROM EMP E JOIN SALGRADE S 
ON E.SAL BETWEEN S.LOSAL AND S.HISAL 
WHERE E.SAL > (SELECT MAX(SAL) FROM EMP WHERE JOB = 'SALESMAN')
ORDER BY EMPNO;

-- 다중행 함수 사용 O 
SELECT EMPNO, ENAME, SAL, GRADE
FROM EMP E JOIN SALGRADE S 
ON E.SAL BETWEEN S.LOSAL AND S.HISAL 
WHERE E.SAL > all (SELECT SAL FROM EMP WHERE JOB = 'SALESMAN' group by sal)
ORDER BY EMPNO;

SELECT EMPNO, ENAME, SAL, GRADE
FROM EMP E JOIN SALGRADE S 
ON E.SAL BETWEEN S.LOSAL AND S.HISAL 
WHERE E.SAL > all (SELECT distinct SAL FROM EMP WHERE JOB = 'SALESMAN')
ORDER BY EMPNO;
